import pandas as pd

"""
This script analyses the speed improvement of enabling the "Minimal Dependencies" component
"""

# Obtain dataset
df = pd.read_csv('../../final-data/results.csv')

# Obtain records where "Minimal Dependencies" is enabled
filtered_df = df[df['ms-base-image'] == 1]
columns_to_check = ['base_image', 'docker_image_name', 'package_extraction', 'dependency_installation']

# Obtain records where "Minimal Dependencies" is disabled
old_df = df[df['ms-base-image'] == 0]
grouped_old_df = old_df.groupby(columns_to_check).first().reset_index()

# Merge the 2 subsets from above
merged_df = pd.merge(filtered_df, grouped_old_df, on=columns_to_check, how='left', suffixes=('', '_old'))

# Calculate the time difference between the two variants
merged_df['time_difference'] = pd.to_datetime(merged_df['dockergeneration-time-real_old'], format='%Mm%S.%fs', errors='coerce') - pd.to_datetime(merged_df['dockergeneration-time-real'], format='%Mm%S.%fs', errors='coerce')
merged_df['time_difference'] = merged_df['time_difference'].dt.total_seconds()
merged_df['time_difference'] = merged_df['time_difference'].apply(lambda x: '-{:02d}m{:06.3f}s'.format(int(abs(x) // 60), abs(x) % 60) if pd.notnull(x) and x < 0 else '{:02d}m{:06.3f}s'.format(int(x // 60), x % 60) if pd.notnull(x) else '')

# Measure the total number of seconds
reference_time = pd.to_datetime('00:00:00', format='%H:%M:%S')
merged_df['dockergeneration-time-real_old'] = (pd.to_datetime(merged_df['dockergeneration-time-real_old'], format='%Mm%S.%fs', errors='coerce') - reference_time).dt.total_seconds()
merged_df['dockergeneration-time-real'] = (pd.to_datetime(merged_df['dockergeneration-time-real'], format='%Mm%S.%fs', errors='coerce') - reference_time).dt.total_seconds()

# Measure the speedup generated by enabling "Minimal Dependencies". A positive value means that there is an improvement, a negative value indicates an increase of containerization time
merged_df['speedup'] = -100 * ((merged_df['dockergeneration-time-real'] - merged_df['dockergeneration-time-real_old']) / merged_df['dockergeneration-time-real_old'])
merged_df['speedup'] = merged_df['speedup'].round(1)

# Prepare final assets, rename the column headers
columns_to_keep = ['source_folder', 'base_image', 'installed_dependencies_old', 'installed_dependencies', 'time_difference', 'speedup']
merged_df = merged_df[columns_to_keep]
merged_df.columns = ['Project', 'Base-mage', 'Old dep.', 'New dep.', 'Time (Î”)', 'Speedup (in %)']

# Only take the first 18 rows, as we perform this analysis on 6 ecological scripts with 3 different base images (6*3=18)
merged_df = merged_df.head(18)

# Print the results and save to a CSV
print(merged_df)
merged_df.to_csv("results/result.csv", index=False)